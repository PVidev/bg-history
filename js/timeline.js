console.log('Timeline.js loaded');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞ —Ç–∏–ø–æ–≤–µ—Ç–µ —Å—ä–±–∏—Ç–∏—è
const eventTypes = {
    political: {
        color: 'var(--primary-color)',
        icon: 'üèõÔ∏è',
        label: '–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ —Å—ä–±–∏—Ç–∏–µ'
    },
    cultural: {
        color: 'var(--accent-color)',
        icon: 'üìö',
        label: '–ö—É–ª—Ç—É—Ä–Ω–æ —Å—ä–±–∏—Ç–∏–µ'
    },
    battle: {
        color: '#D32F2F',
        icon: '‚öîÔ∏è',
        label: '–ë–∏—Ç–∫–∞'
    }
};

// –î–∞–Ω–Ω–∏ –∑–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ç–µ —Å—ä–±–∏—Ç–∏—è
const timelineData = {
    "first-empire": {
        title: "–ü—ä—Ä–≤–æ –±—ä–ª–≥–∞—Ä—Å–∫–æ —Ü–∞—Ä—Å—Ç–≤–æ",
        events: [
            {
                year: 681,
                title: "–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∞—Ç–∞ –¥—ä—Ä–∂–∞–≤–∞",
                description: "–•–∞–Ω –ê—Å–ø–∞—Ä—É—Ö –æ—Å–Ω–æ–≤–∞–≤–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∞—Ç–∞ –¥—ä—Ä–∂–∞–≤–∞ —Å–ª–µ–¥ –ø–æ–±–µ–¥–∞—Ç–∞ –Ω–∞–¥ –í–∏–∑–∞–Ω—Ç–∏—è",
                type: "political"
            },
            {
                year: 705,
                title: "–ó–∞–≥–æ—Ä–µ –∫—ä–º –ë—ä–ª–≥–∞—Ä–∏—è",
                description: "–•–∞–Ω –¢–µ—Ä–≤–µ–ª –ø–æ–ª—É—á–∞–≤–∞ –æ–±–ª–∞—Å—Ç—Ç–∞ –ó–∞–≥–æ—Ä–µ –æ—Ç –í–∏–∑–∞–Ω—Ç–∏—è",
                type: "political"
            },
            {
                year: 718,
                title: "–ó–∞—â–∏—Ç–∞ –Ω–∞ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª",
                description: "–•–∞–Ω –¢–µ—Ä–≤–µ–ª —Å–ø–∞—Å—è–≤–∞ –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω–æ–ø–æ–ª –æ—Ç –∞—Ä–∞–±–∏—Ç–µ",
                type: "battle"
            },
            {
                year: 864,
                title: "–ü–æ–∫—Ä—ä—Å—Ç–≤–∞–Ω–µ –Ω–∞ –±—ä–ª–≥–∞—Ä–∏—Ç–µ",
                description: "–ö–Ω—è–∑ –ë–æ—Ä–∏—Å I –ø—Ä–∏–µ–º–∞ —Ö—Ä–∏—Å—Ç–∏—è–Ω—Å—Ç–≤–æ—Ç–æ –∫–∞—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª–Ω–∞ —Ä–µ–ª–∏–≥–∏—è",
                type: "cultural"
            },
            {
                year: 886,
                title: "–ü—Ä–∏—Å—Ç–∏–≥–∞–Ω–µ –Ω–∞ —É—á–µ–Ω–∏—Ü–∏—Ç–µ –Ω–∞ –ö–∏—Ä–∏–ª –∏ –ú–µ—Ç–æ–¥–∏–π",
                description: "–°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–∏—Ç–µ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∞—Ç–∞ –ø–∏—Å–º–µ–Ω–æ—Å—Ç –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞",
                type: "cultural"
            },
            {
                year: 893,
                title: "–ü—Ä–µ—Å–ª–∞–≤—Å–∫–∏ —Å—ä–±–æ—Ä",
                description: "–ü—Ä–µ–Ω–∞—Å—è–Ω–µ –Ω–∞ —Å—Ç–æ–ª–∏—Ü–∞—Ç–∞ –≤ –ü—Ä–µ—Å–ª–∞–≤ –∏ —É—Ç–≤—ä—Ä–∂–¥–∞–≤–∞–Ω–µ –Ω–∞ —Å–ª–∞–≤—è–Ω—Å–∫–∏—è –µ–∑–∏–∫",
                type: "political"
            },
            {
                year: 917,
                title: "–ë–∏—Ç–∫–∞ –ø—Ä–∏ –ê—Ö–µ–ª–æ–π",
                description: "–¶–∞—Ä –°–∏–º–µ–æ–Ω I –ø–æ–±–µ–∂–¥–∞–≤–∞ –≤–∏–∑–∞–Ω—Ç–∏–π—Å–∫–∞—Ç–∞ –∞—Ä–º–∏—è",
                type: "battle"
            },
            {
                year: 1014,
                title: "–ë–∏—Ç–∫–∞ –ø—Ä–∏ –ë–µ–ª–∞—Å–∏—Ü–∞",
                description: "–í–∏–∑–∞–Ω—Ç–∏–π—Ü–∏—Ç–µ –ø–ª–µ–Ω—è–≤–∞—Ç –∏ –æ—Å–ª–µ–ø—è–≤–∞—Ç 14 000 –±—ä–ª–≥–∞—Ä—Å–∫–∏ –≤–æ–π–Ω–∏—Ü–∏",
                type: "battle"
            },
            {
                year: 1018,
                title: "–ö—Ä–∞–π –Ω–∞ –ü—ä—Ä–≤–æ—Ç–æ —Ü–∞—Ä—Å—Ç–≤–æ",
                description: "–ë—ä–ª–≥–∞—Ä–∏—è –ø–æ–ø–∞–¥–∞ –ø–æ–¥ –≤–∏–∑–∞–Ω—Ç–∏–π—Å–∫–æ –≤–ª–∞–¥–∏—á–µ—Å—Ç–≤–æ",
                type: "political"
            }
        ]
    },
    "second-empire": {
        title: "–í—Ç–æ—Ä–æ –±—ä–ª–≥–∞—Ä—Å–∫–æ —Ü–∞—Ä—Å—Ç–≤–æ",
        events: [
            {
                year: 1185,
                title: "–í—ä—Å—Ç–∞–Ω–∏–µ –Ω–∞ –ê—Å–µ–Ω–µ–≤—Ü–∏",
                description: "–ü–µ—Ç—ä—Ä –∏ –ê—Å–µ–Ω –≤–¥–∏–≥–∞—Ç –≤—ä—Å—Ç–∞–Ω–∏–µ —Å—Ä–µ—â—É –í–∏–∑–∞–Ω—Ç–∏—è –∏ –≤—ä–∑—Å—Ç–∞–Ω–æ–≤—è–≤–∞—Ç –±—ä–ª–≥–∞—Ä—Å–∫–∞—Ç–∞ –¥—ä—Ä–∂–∞–≤–∞",
                type: "political"
            },
            {
                year: 1205,
                title: "–ë–∏—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –ê–¥—Ä–∏–∞–Ω–æ–ø–æ–ª",
                description: "–¶–∞—Ä –ö–∞–ª–æ—è–Ω –ø–æ–±–µ–∂–¥–∞–≤–∞ –ª–∞—Ç–∏–Ω—Å–∫–∞—Ç–∞ –∞—Ä–º–∏—è",
                type: "battle"
            },
            {
                year: 1230,
                title: "–ë–∏—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –ö–ª–æ–∫–æ—Ç–Ω–∏—Ü–∞",
                description: "–¶–∞—Ä –ò–≤–∞–Ω –ê—Å–µ–Ω II —Ä–∞–∑–≥—Ä–æ–º—è–≤–∞ –µ–ø–∏—Ä—Å–∫–∏—è –¥–µ—Å–ø–æ—Ç –¢–µ–æ–¥–æ—Ä –ö–æ–º–Ω–∏–Ω",
                type: "battle"
            },
            {
                year: 1277,
                title: "–í—ä—Å—Ç–∞–Ω–∏–µ –Ω–∞ –ò–≤–∞–π–ª–æ",
                description: "–ò–≤–∞–π–ª–æ –ø–æ–±–µ–∂–¥–∞–≤–∞ —Ç–∞—Ç–∞—Ä–∏—Ç–µ –∏ —Å–µ –≤—ä–∑–∫–∞—á–≤–∞ –Ω–∞ –ø—Ä–µ—Å—Ç–æ–ª–∞",
                type: "political"
            },
            {
                year: 1393,
                title: "–ü–∞–¥–∞–Ω–µ—Ç–æ –Ω–∞ –¢—ä—Ä–Ω–æ–≤–æ",
                description: "–û—Å–º–∞–Ω—Ü–∏—Ç–µ –ø—Ä–µ–≤–∑–µ–º–∞—Ç —Å—Ç–æ–ª–∏—Ü–∞—Ç–∞ –¢—ä—Ä–Ω–æ–≤–æ",
                type: "political"
            },
            {
                year: 1396,
                title: "–ë–∏—Ç–∫–∞—Ç–∞ –ø—Ä–∏ –ù–∏–∫–æ–ø–æ–ª",
                description: "–ü–æ—Å–ª–µ–¥–Ω–∞ —Å—ä–ø—Ä–æ—Ç–∏–≤–∞ —Å—Ä–µ—â—É –æ—Å–º–∞–Ω—Ü–∏—Ç–µ, –ø–æ—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Ö—Ä–∏—Å—Ç–∏—è–Ω—Å–∫–∞—Ç–∞ –∞—Ä–º–∏—è",
                type: "battle"
            }
        ]
    },
    "ottoman": {
        title: "–û—Å–º–∞–Ω—Å–∫–æ –≤–ª–∞–¥–∏—á–µ—Å—Ç–≤–æ",
        events: [
            {
                year: 1598,
                title: "–ü—ä—Ä–≤–æ –¢—ä—Ä–Ω–æ–≤—Å–∫–æ –≤—ä—Å—Ç–∞–Ω–∏–µ",
                description: "–ù–µ—É—Å–ø–µ—à–µ–Ω –æ–ø–∏—Ç –∑–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –æ—Å–º–∞–Ω—Å–∫–∞ –≤–ª–∞—Å—Ç",
                type: "political"
            },
            {
                year: 1762,
                title: "–ò—Å—Ç–æ—Ä–∏—è —Å–ª–∞–≤—è–Ω–æ–±—ä–ª–≥–∞—Ä—Å–∫–∞",
                description: "–ü–∞–∏—Å–∏–π –•–∏–ª–µ–Ω–¥–∞—Ä—Å–∫–∏ –∑–∞–≤—ä—Ä—à–≤–∞ —Å–≤–æ—è—Ç–∞ –ò—Å—Ç–æ—Ä–∏—è —Å–ª–∞–≤—è–Ω–æ–±—ä–ª–≥–∞—Ä—Å–∫–∞",
                type: "cultural"
            },
            {
                year: 1876,
                title: "–ê–ø—Ä–∏–ª—Å–∫–æ –≤—ä—Å—Ç–∞–Ω–∏–µ",
                description: "–ú–∞—Å–æ–≤–æ –≤—ä—Å—Ç–∞–Ω–∏–µ –Ω–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∏—è –Ω–∞—Ä–æ–¥ —Å—Ä–µ—â—É –æ—Å–º–∞–Ω—Å–∫–∞—Ç–∞ –≤–ª–∞—Å—Ç",
                type: "political"
            }
        ]
    },
    "modern": {
        title: "–°—ä–≤—Ä–µ–º–µ–Ω–Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è",
        events: [
            {
                year: 1878,
                title: "–û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –Ω–∞ –ë—ä–ª–≥–∞—Ä–∏—è",
                description: "–ë—ä–ª–≥–∞—Ä–∏—è –ø–æ–ª—É—á–∞–≤–∞ –∞–≤—Ç–æ–Ω–æ–º–∏—è —Å–ª–µ–¥ –†—É—Å–∫–æ-—Ç—É—Ä—Å–∫–∞—Ç–∞ –≤–æ–π–Ω–∞",
                type: "political"
            },
            {
                year: 1885,
                title: "–°—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–∞ –ö–Ω—è–∂–µ—Å—Ç–≤–æ –ë—ä–ª–≥–∞—Ä–∏—è –∏ –ò–∑—Ç–æ—á–Ω–∞ –†—É–º–µ–ª–∏—è",
                description: "–ë—ä–ª–≥–∞—Ä–∏—è –æ—Ç—Ö–≤—ä—Ä–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ—Ç–æ, –Ω–∞–ª–æ–∂–µ–Ω–æ –æ—Ç –ë–µ—Ä–ª–∏–Ω—Å–∫–∏—è –∫–æ–Ω–≥—Ä–µ—Å",
                type: "political"
            },
            {
                year: 1908,
                title: "–û–±—è–≤—è–≤–∞–Ω–µ –Ω–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—Ç–∞",
                description: "–ë—ä–ª–≥–∞—Ä–∏—è —Å—Ç–∞–≤–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ —Ü–∞—Ä—Å—Ç–≤–æ –Ω–∞—á–µ–ª–æ —Å —Ü–∞—Ä –§–µ—Ä–¥–∏–Ω–∞–Ω–¥ I",
                type: "political"
            },
            {
                year: 1944,
                title: "–î–µ–≤–µ—Ç–æ—Å–µ–ø—Ç–µ–º–≤—Ä–∏–π—Å–∫–∏ –ø—Ä–µ–≤—Ä–∞—Ç",
                description: "–ù–∞ –≤–ª–∞—Å—Ç –∏–¥–≤–∞ –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–∏—è—Ç —Ñ—Ä–æ–Ω—Ç —Å –ø–æ–¥–∫—Ä–µ–ø–∞—Ç–∞ –Ω–∞ –°–°–°–†",
                type: "political"
            },
            {
                year: 1989,
                title: "–ü–∞–¥–∞–Ω–µ—Ç–æ –Ω–∞ –¢–æ–¥–æ—Ä –ñ–∏–≤–∫–æ–≤",
                description: "–ö—Ä–∞–π –Ω–∞ –∫–æ–º—É–Ω–∏—Å—Ç–∏—á–µ—Å–∫–∏—è —Ä–µ–∂–∏–º –≤ –ë—ä–ª–≥–∞—Ä–∏—è",
                type: "political"
            },
            {
                year: 2007,
                title: "–ß–ª–µ–Ω—Å—Ç–≤–æ –≤ –ï–°",
                description: "–ë—ä–ª–≥–∞—Ä–∏—è –æ—Ñ–∏—Ü–∏–∞–ª–Ω–æ —Å—Ç–∞–≤–∞ —á–ª–µ–Ω –Ω–∞ –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏—è —Å—ä—é–∑",
                type: "political"
            }
        ]
    }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ HTML –∑–∞ —Å—ä–±–∏—Ç–∏–µ
function createEventHTML(event) {
    const typeInfo = eventTypes[event.type];
    return `
        <div class="timeline-event" data-type="${event.type}" style="border-color: ${typeInfo.color}">
            <div class="event-year">${event.year}</div>
            <div class="event-content">
                <h3>${typeInfo.icon} ${event.title}</h3>
                <p>${event.description}</p>
                <button class="event-details-btn" onclick="showEventDetails(this.parentElement.parentElement)">
                    –ü–æ–≤–µ—á–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </button>
            </div>
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
function displayEvents(activePeriod = 'all', activeType = 'all') {
    const timelineContainer = document.querySelector('.timeline-container');
    let html = '';

    if (activePeriod === 'all') {
        // Display all events from all periods
        Object.values(timelineData).forEach(period => {
            html += `<h2 class="period-title">${period.title}</h2>`;
            const filteredEvents = period.events.filter(event => 
                activeType === 'all' || event.type === activeType
            );
            filteredEvents.sort((a, b) => a.year - b.year);
            filteredEvents.forEach(event => {
                html += createEventHTML(event);
            });
        });
    } else {
        // Display events from selected period
        const period = timelineData[activePeriod];
        if (period) {
            html += `<h2 class="period-title">${period.title}</h2>`;
            const filteredEvents = period.events.filter(event => 
                activeType === 'all' || event.type === activeType
            );
            filteredEvents.sort((a, b) => a.year - b.year);
            filteredEvents.forEach(event => {
                html += createEventHTML(event);
            });
        }
    }

    timelineContainer.innerHTML = html;

    // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ—è–≤—è–≤–∞–Ω–µ
    const events = timelineContainer.querySelectorAll('.timeline-event');
    events.forEach((event, index) => {
        event.style.animation = `fadeIn 0.5s ease forwards ${index * 0.1}s`;
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Ñ–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
function filterEvents() {
    const activePeriod = document.querySelector('.filter-options [data-period].active').dataset.period;
    const activeType = document.querySelector('.filter-options [data-type].active').dataset.type;
    displayEvents(activePeriod, activeType);
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Ç—ä—Ä—Å–µ–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
function searchEvents(query) {
    const searchTerm = query.toLowerCase();
    document.querySelectorAll('.event').forEach(event => {
        const title = event.querySelector('.event-title').textContent.toLowerCase();
        const description = event.querySelector('.event-description').textContent.toLowerCase();
        const date = event.querySelector('.event-date').textContent.toLowerCase();
        
        const matches = title.includes(searchTerm) || 
                       description.includes(searchTerm) || 
                       date.includes(searchTerm);
        
        event.style.display = matches ? 'block' : 'none';
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏—è
function sortEvents(sortBy) {
    const timeline = document.querySelector('.timeline');
    const periods = Array.from(document.querySelectorAll('.period'));
    
    periods.forEach(period => {
        const eventsContainer = period.querySelector('.events-container');
        const events = Array.from(period.querySelectorAll('.event'));
        
        events.sort((a, b) => {
            const dateA = parseInt(a.querySelector('.event-date').textContent);
            const dateB = parseInt(b.querySelector('.event-date').textContent);
            
            return sortBy === 'asc' ? dateA - dateB : dateB - dateA;
        });
        
        events.forEach(event => eventsContainer.appendChild(event));
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –¥–µ—Ç–∞–π–ª–∏ –∑–∞ —Å—ä–±–∏—Ç–∏–µ
function showEventDetails(eventElement) {
    const year = eventElement.querySelector('.event-year').textContent;
    const title = eventElement.querySelector('h3').textContent;
    const description = eventElement.querySelector('p').textContent;
    const type = eventElement.dataset.type;
    const typeInfo = eventTypes[type];

    const modal = document.createElement('div');
    modal.className = 'event-modal';
    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="event-header" style="border-color: ${typeInfo.color}">
                <div class="event-type-badge" style="background-color: ${typeInfo.color}">
                    ${typeInfo.icon} ${typeInfo.label}
                </div>
                <h2>${title}</h2>
                <div class="event-year-large">${year} –≥.</div>
            </div>
            <div class="event-body">
                <p class="event-description">${description}</p>
                <div class="event-actions">
                    <button onclick="shareEvent(this.closest('.modal-content'))">
                        üì§ –°–ø–æ–¥–µ–ª—è–Ω–µ
                    </button>
                    <button onclick="window.open('https://bg.wikipedia.org/wiki/' + encodeURIComponent(title), '_blank')">
                        üìñ –ù–∞—É—á–∏ –ø–æ–≤–µ—á–µ
                    </button>
                </div>
            </div>
        </div>
    `;

    document.body.appendChild(modal);

    // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Å—Ç–∏–ª–æ–≤–µ –∑–∞ –º–æ–¥–∞–ª–∞
    const style = document.createElement('style');
    style.textContent = `
        .event-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border-radius: var(--border-radius-lg);
            max-width: 600px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
        }

        .close-modal {
            position: absolute;
            right: 20px;
            top: 20px;
            font-size: 24px;
            cursor: pointer;
            color: var(--text-color);
        }

        .event-header {
            border-bottom: 3px solid;
            padding-bottom: 15px;
            margin-bottom: 20px;
        }

        .event-type-badge {
            display: inline-block;
            padding: 5px 10px;
            border-radius: var(--border-radius-sm);
            color: white;
            margin-bottom: 10px;
        }

        .event-year-large {
            font-size: 1.5rem;
            color: var(--primary-color);
            margin-top: 10px;
        }

        .event-body {
            padding: 20px 0;
        }

        .event-description {
            font-size: 1.1rem;
            line-height: 1.6;
            margin-bottom: 20px;
        }

        .event-actions {
            display: flex;
            gap: 10px;
            justify-content: flex-end;
        }

        .event-actions button {
            padding: 8px 16px;
            border: 1px solid var(--primary-color);
            border-radius: var(--border-radius-sm);
            background-color: white;
            color: var(--primary-color);
            cursor: pointer;
            transition: var(--transition-normal);
        }

        .event-actions button:hover {
            background-color: var(--primary-color);
            color: white;
        }
    `;
    document.head.appendChild(style);

    // –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –º–æ–¥–∞–ª–∞
    modal.querySelector('.close-modal').addEventListener('click', () => {
        modal.remove();
    });

    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–≤–∞–Ω–µ
function addScrollAnimations() {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
            }
        });
    }, {
        threshold: 0.1
    });
    
    document.querySelectorAll('.period, .event').forEach(element => {
        observer.observe(element);
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å–ø–æ–¥–µ–ª—è–Ω–µ –Ω–∞ —Å—ä–±–∏—Ç–∏–µ
function shareEvent(eventContent) {
    const title = eventContent.querySelector('h2').textContent;
    const year = eventContent.querySelector('.event-year-large').textContent;
    const description = eventContent.querySelector('.event-description').textContent;
    
    const shareText = `${title} (${year})\n${description}`;
    
    if (navigator.share) {
        navigator.share({
            title: title,
            text: shareText,
            url: window.location.href
        }).catch(console.error);
    } else {
        // Fallback –∑–∞ –±—Ä–∞—É–∑—ä—Ä–∏ –±–µ–∑ Web Share API
        const tempInput = document.createElement('input');
        tempInput.value = shareText;
        document.body.appendChild(tempInput);
        tempInput.select();
        document.execCommand('copy');
        document.body.removeChild(tempInput);
        alert('–¢–µ–∫—Å—Ç—ä—Ç –µ –∫–æ–ø–∏—Ä–∞–Ω –≤ –∫–ª–∏–ø–±–æ—Ä–¥–∞!');
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ –Ω–∞ –±–µ–ª–µ–∂–∫–∏
function addNote(event) {
    const note = prompt('–î–æ–±–∞–≤–µ—Ç–µ –±–µ–ª–µ–∂–∫–∞ –∫—ä–º —Ç–æ–≤–∞ —Å—ä–±–∏—Ç–∏–µ:');
    if (note) {
        const noteElement = document.createElement('div');
        noteElement.className = 'event-note';
        noteElement.innerHTML = `
            <div class="note-content">${note}</div>
            <button class="delete-note">&times;</button>
        `;
        
        event.appendChild(noteElement);
        
        // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –±–µ–ª–µ–∂–∫–∞—Ç–∞ –≤ localStorage
        const eventId = event.dataset.id || Date.now();
        event.dataset.id = eventId;
        const notes = JSON.parse(localStorage.getItem('eventNotes') || '{}');
        notes[eventId] = note;
        localStorage.setItem('eventNotes', JSON.stringify(notes));
        
        // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Å–ª—É—à–∞—Ç–µ–ª –∑–∞ –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ
        noteElement.querySelector('.delete-note').addEventListener('click', () => {
            noteElement.remove();
            const notes = JSON.parse(localStorage.getItem('eventNotes') || '{}');
            delete notes[eventId];
            localStorage.setItem('eventNotes', JSON.stringify(notes));
        });
    }
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏
function comparePeriods(period1, period2) {
    const modal = document.createElement('div');
    modal.className = 'comparison-modal';
    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏</h2>
            <div class="comparison-container">
                <div class="period-comparison">
                    <h3>${period1.querySelector('.period-title').textContent}</h3>
                    <div class="period-stats">
                        <p>–ë—Ä–æ–π —Å—ä–±–∏—Ç–∏—è: ${period1.querySelectorAll('.event').length}</p>
                        <p>–ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç: ${calculateDuration(period1)} –≥–æ–¥–∏–Ω–∏</p>
                    </div>
                </div>
                <div class="period-comparison">
                    <h3>${period2.querySelector('.period-title').textContent}</h3>
                    <div class="period-stats">
                        <p>–ë—Ä–æ–π —Å—ä–±–∏—Ç–∏—è: ${period2.querySelectorAll('.event').length}</p>
                        <p>–ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç: ${calculateDuration(period2)} –≥–æ–¥–∏–Ω–∏</p>
                    </div>
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.querySelector('.close-modal').addEventListener('click', () => {
        modal.remove();
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ –ø–µ—Ä–∏–æ–¥
function calculateDuration(period) {
    const events = period.querySelectorAll('.event');
    const dates = Array.from(events).map(event => {
        const dateText = event.querySelector('.event-date').textContent;
        return parseInt(dateText.split('-')[0]);
    });
    
    if (dates.length < 2) return '–ù—è–º–∞ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –¥–∞–Ω–Ω–∏';
    
    const minDate = Math.min(...dates);
    const maxDate = Math.max(...dates);
    return maxDate - minDate;
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –ø–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
function showStatistics() {
    const modal = document.createElement('div');
    modal.className = 'statistics-modal';
    
    const periods = document.querySelectorAll('.period');
    const totalEvents = document.querySelectorAll('.event').length;
    const eventTypes = {};
    const periodDurations = {};
    
    // –°—ä–±–∏—Ä–∞–Ω–µ –Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    periods.forEach(period => {
        const periodTitle = period.querySelector('.period-title').textContent;
        const events = period.querySelectorAll('.event');
        const dates = Array.from(events).map(event => {
            const dateText = event.querySelector('.event-date').textContent;
            return parseInt(dateText.split('-')[0]);
        });
        
        const duration = dates.length >= 2 ? Math.max(...dates) - Math.min(...dates) : 0;
        periodDurations[periodTitle] = duration;
        
        events.forEach(event => {
            const type = event.dataset.type;
            eventTypes[type] = (eventTypes[type] || 0) + 1;
        });
    });
    
    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
            <div class="statistics-container">
                <div class="stat-card">
                    <h3>–û–±—â–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
                    <p>–û–±—â –±—Ä–æ–π —Å—ä–±–∏—Ç–∏—è: ${totalEvents}</p>
                    <p>–ë—Ä–æ–π –ø–µ—Ä–∏–æ–¥–∏: ${periods.length}</p>
                </div>
                <div class="stat-card">
                    <h3>–¢–∏–ø–æ–≤–µ —Å—ä–±–∏—Ç–∏—è</h3>
                    ${Object.entries(eventTypes).map(([type, count]) => `
                        <p>${type}: ${count} (${Math.round(count/totalEvents*100)}%)</p>
                    `).join('')}
                </div>
                <div class="stat-card">
                    <h3>–ü—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç –Ω–∞ –ø–µ—Ä–∏–æ–¥–∏—Ç–µ</h3>
                    ${Object.entries(periodDurations).map(([period, duration]) => `
                        <p>${period}: ${duration} –≥–æ–¥–∏–Ω–∏</p>
                    `).join('')}
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    modal.querySelector('.close-modal').addEventListener('click', () => {
        modal.remove();
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ –∫–∞—Ä—Ç–∞
function showInteractiveMap() {
    const modal = document.createElement('div');
    modal.className = 'map-modal';
    
    modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞ –∫–∞—Ä—Ç–∞</h2>
            <div class="map-container">
                <div class="map-controls">
                    <button class="map-period-btn" data-period="first-empire">–ü—ä—Ä–≤–æ —Ü–∞—Ä—Å—Ç–≤–æ</button>
                    <button class="map-period-btn" data-period="second-empire">–í—Ç–æ—Ä–æ —Ü–∞—Ä—Å—Ç–≤–æ</button>
                    <button class="map-period-btn" data-period="ottoman">–û—Å–º–∞–Ω—Å–∫–æ –≤–ª–∞–¥–∏—á–µ—Å—Ç–≤–æ</button>
                    <button class="map-period-btn" data-period="modern">–°—ä–≤—Ä–µ–º–µ–Ω–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è</button>
                </div>
                <div class="map-view">
                    <!-- –¢—É–∫ —â–µ —Å–µ –ø–æ–∫–∞–∑–≤–∞ –∫–∞—Ä—Ç–∞—Ç–∞ -->
                    <img src="map-placeholder.jpg" alt="–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞ –∫–∞—Ä—Ç–∞" class="map-image">
                </div>
            </div>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Å–ª—É—à–∞—Ç–µ–ª–∏ –∑–∞ –±—É—Ç–æ–Ω–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞
    modal.querySelectorAll('.map-period-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const period = btn.dataset.period;
            // –¢—É–∫ —â–µ —Å–µ –∑–∞—Ä–µ–∂–¥–∞ —Å—ä–æ—Ç–≤–µ—Ç–Ω–∞—Ç–∞ –∫–∞—Ä—Ç–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥–∞
            console.log(`–ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫–∞—Ä—Ç–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥: ${period}`);
        });
    });
    
    modal.querySelector('.close-modal').addEventListener('click', () => {
        modal.remove();
    });
}

// –§—É–Ω–∫—Ü–∏—è –∑–∞ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ
function showQuiz() {
    const modal = document.createElement('div');
    modal.className = 'quiz-modal';
    
    const questions = [
        {
            question: "–ö–æ–π –µ –æ—Å–Ω–æ–≤–∞–ª –ü—ä—Ä–≤–∞—Ç–∞ –±—ä–ª–≥–∞—Ä—Å–∫–∞ –¥—ä—Ä–∂–∞–≤–∞?",
            options: ["–•–∞–Ω –ê—Å–ø–∞—Ä—É—Ö", "–•–∞–Ω –ö—Ä—É–º", "–¶–∞—Ä –°–∏–º–µ–æ–Ω", "–•–∞–Ω –¢–µ—Ä–≤–µ–ª"],
            correct: 0
        },
        {
            question: "–ö–æ–≥–∞ –µ –ø—Ä–∏–µ—Ç–æ —Ö—Ä–∏—Å—Ç–∏—è–Ω—Å—Ç–≤–æ—Ç–æ –≤ –ë—ä–ª–≥–∞—Ä–∏—è?",
            options: ["681", "864", "1018", "1185"],
            correct: 1
        },
        {
            question: "–ö–æ–π –µ –∞–≤—Ç–æ—Ä –Ω–∞ '–ò—Å—Ç–æ—Ä–∏—è —Å–ª–∞–≤—è–Ω–æ–±—ä–ª–≥–∞—Ä—Å–∫–∞'?",
            options: ["–ü–∞–∏—Å–∏–π –•–∏–ª–µ–Ω–¥–∞—Ä—Å–∫–∏", "–ù–µ–æ—Ñ–∏—Ç –ë–æ–∑–≤–µ–ª–∏", "–ì–µ–æ—Ä–≥–∏ –†–∞–∫–æ–≤—Å–∫–∏", "–õ—é–±–µ–Ω –ö–∞—Ä–∞–≤–µ–ª–æ–≤"],
            correct: 0
        }
    ];
    
    let currentQuestion = 0;
    let score = 0;
    
    function showQuestion() {
        const question = questions[currentQuestion];
        modal.innerHTML = `
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <h2>–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏ —Ç–µ—Å—Ç</h2>
                <div class="quiz-container">
                    <div class="question">${question.question}</div>
                    <div class="options">
                        ${question.options.map((option, index) => `
                            <button class="option-btn" data-index="${index}">${option}</button>
                        `).join('')}
                    </div>
                    <div class="quiz-progress">
                        –í—ä–ø—Ä–æ—Å ${currentQuestion + 1} –æ—Ç ${questions.length}
                    </div>
                </div>
            </div>
        `;
        
        // –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Å–ª—É—à–∞—Ç–µ–ª–∏ –∑–∞ –æ—Ç–≥–æ–≤–æ—Ä–∏—Ç–µ
        modal.querySelectorAll('.option-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const selectedIndex = parseInt(btn.dataset.index);
                if (selectedIndex === question.correct) {
                    score++;
                    btn.classList.add('correct');
                } else {
                    btn.classList.add('wrong');
                    modal.querySelector(`.option-btn[data-index="${question.correct}"]`).classList.add('correct');
                }
                
                setTimeout(() => {
                    currentQuestion++;
                    if (currentQuestion < questions.length) {
                        showQuestion();
                    } else {
                        showResults();
                    }
                }, 1000);
            });
        });
        
        modal.querySelector('.close-modal').addEventListener('click', () => {
            modal.remove();
        });
    }
    
    function showResults() {
        modal.innerHTML = `
            <div class="modal-content">
                <span class="close-modal">&times;</span>
                <h2>–†–µ–∑—É–ª—Ç–∞—Ç–∏</h2>
                <div class="results-container">
                    <p>–í–∞—à–∏—è—Ç —Ä–µ–∑—É–ª—Ç–∞—Ç: ${score} –æ—Ç ${questions.length}</p>
                    <p>–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ–≤–∞–µ–º–æ—Å—Ç: ${Math.round(score/questions.length*100)}%</p>
                    <button class="restart-quiz">–ù–æ–≤ —Ç–µ—Å—Ç</button>
                </div>
            </div>
        `;
        
        modal.querySelector('.restart-quiz').addEventListener('click', () => {
            currentQuestion = 0;
            score = 0;
            showQuestion();
        });
        
        modal.querySelector('.close-modal').addEventListener('click', () => {
            modal.remove();
        });
    }
    
    document.body.appendChild(modal);
    showQuestion();
}

// –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ CSS –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .timeline-event {
        opacity: 0;
    }

    .event-details-btn {
        padding: 5px 10px;
        margin-top: 10px;
        border: 1px solid var(--primary-color);
        border-radius: var(--border-radius-sm);
        background-color: transparent;
        color: var(--primary-color);
        cursor: pointer;
        transition: var(--transition-normal);
    }

    .event-details-btn:hover {
        background-color: var(--primary-color);
        color: white;
    }
`;
document.head.appendChild(style);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
document.addEventListener('DOMContentLoaded', () => {
    const filterButtons = document.querySelectorAll('.filter-btn');
    
    filterButtons.forEach(button => {
        button.addEventListener('click', (e) => {
            // Remove active class from siblings
            const filterOptions = button.closest('.filter-options');
            filterOptions.querySelectorAll('.filter-btn').forEach(btn => {
                btn.classList.remove('active');
            });
            
            // Add active class to clicked button
            button.classList.add('active');
            
            // Update display
            filterEvents();
        });
    });

    // –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —Å—ä–±–∏—Ç–∏—è –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
    displayEvents();
}); 